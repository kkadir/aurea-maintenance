//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aurea.Maintenance.Debugger.Texpo.TexpoWS {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", ConfigurationName="TexpoWS.EnrollmentSoap")]
    public interface EnrollmentSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/AggregatorFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AggregatorFee(int aggregatorId, int customerId, int premiseId, decimal commission, int termLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/AggregatorFee", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AggregatorFeeAsync(int aggregatorId, int customerId, int premiseId, decimal commission, int termLength);
        
        // CODEGEN: Parameter 'rateId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerResponse EnrollCustomer(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerResponse> EnrollCustomerAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest request);
        
        // CODEGEN: Parameter 'rateId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollCustomerWithLanguageFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagResponse EnrollCustomerWithLanguageFlag(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollCustomerWithLanguageFlag", ReplyAction="*")]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagResponse> EnrollCustomerWithLanguageFlagAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollCustomerPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int EnrollCustomerPaymentInfo(
                    int enrollCustomerId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string creditCardType, 
                    string creditCardNumber, 
                    string creditCardSIC, 
                    string creditCardExpMonth, 
                    string creditCardExpYear, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingCity, 
                    string billingState, 
                    string billingZip, 
                    decimal depositAmount, 
                    bool isRecurringPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollCustomerPaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> EnrollCustomerPaymentInfoAsync(
                    int enrollCustomerId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string creditCardType, 
                    string creditCardNumber, 
                    string creditCardSIC, 
                    string creditCardExpMonth, 
                    string creditCardExpYear, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingCity, 
                    string billingState, 
                    string billingZip, 
                    decimal depositAmount, 
                    bool isRecurringPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollPremise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EnrollPremise(int enrollPremiseId, bool hasLifeSupport);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollPremise", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EnrollPremiseAsync(int enrollPremiseId, bool hasLifeSupport);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ImportCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportCustomer(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ImportCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ImportCustomerAsync(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ImportNonTexasCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportNonTexasCustomer(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ImportNonTexasCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ImportNonTexasCustomerAsync(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ReferAFriend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ReferAFriend(int customerId, int enrollCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ReferAFriend", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ReferAFriendAsync(int customerId, int enrollCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ValidateEsiId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateEsiId(string esiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ValidateEsiId", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ValidateEsiIdAsync(string esiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ValidateSecurity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidateSecurity();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ValidateSecurity", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateSecurityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ValidateServiceAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateServiceAddress(string address1, string address2, string city, string state, string zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/ValidateServiceAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ValidateServiceAddressAsync(string address1, string address2, string city, string state, string zip);
        
        // CODEGEN: Parameter 'serviceCycle' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollNonTexasPremise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseResponse EnrollNonTexasPremise(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollNonTexasPremise", ReplyAction="*")]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseResponse> EnrollNonTexasPremiseAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest request);
        
        // CODEGEN: Parameter 'rateId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollNonTexasCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerResponse EnrollNonTexasCustomer(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.ista-billing.com/clients/texpo/EnrollNonTexasCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerResponse> EnrollNonTexasCustomerAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.ista-billing.com/clients/texpo/")]
    public enum CustomerTypeOptions {
        
        /// <remarks/>
        RESIDENTIAL,
        
        /// <remarks/>
        COMMERCIAL,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollCustomer", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=1)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=2)]
        public string middleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=3)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=4)]
        public string address1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=5)]
        public string address2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=6)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=7)]
        public string state;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=8)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> rateId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=10)]
        public int rateMonths;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=11)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=12)]
        public System.DateTime birthDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=13)]
        public string federalTaxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=14)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=15)]
        public string phoneExt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=16)]
        public string fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=17)]
        public bool isNewResidence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=18)]
        public System.DateTime serviceStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=19)]
        public string heardAboutUs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=20)]
        public string enrollmentGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=21)]
        public int divisionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=22)]
        public int creditScore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=23)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> languageId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=24)]
        public string tpVerificationNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=25)]
        public string brokerSalesCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=26)]
        public string productCode;
        
        public EnrollCustomerRequest() {
        }
        
        public EnrollCustomerRequest(
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    int rateMonths, 
                    string email, 
                    System.DateTime birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    int creditScore, 
                    System.Nullable<int> languageId, 
                    string tpVerificationNum, 
                    string brokerSalesCode, 
                    string productCode) {
            this.customerType = customerType;
            this.firstName = firstName;
            this.middleName = middleName;
            this.lastName = lastName;
            this.address1 = address1;
            this.address2 = address2;
            this.city = city;
            this.state = state;
            this.zip = zip;
            this.rateId = rateId;
            this.rateMonths = rateMonths;
            this.email = email;
            this.birthDate = birthDate;
            this.federalTaxId = federalTaxId;
            this.phone = phone;
            this.phoneExt = phoneExt;
            this.fax = fax;
            this.isNewResidence = isNewResidence;
            this.serviceStartDate = serviceStartDate;
            this.heardAboutUs = heardAboutUs;
            this.enrollmentGuid = enrollmentGuid;
            this.divisionId = divisionId;
            this.creditScore = creditScore;
            this.languageId = languageId;
            this.tpVerificationNum = tpVerificationNum;
            this.brokerSalesCode = brokerSalesCode;
            this.productCode = productCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollCustomerResponse", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public int EnrollCustomerResult;
        
        public EnrollCustomerResponse() {
        }
        
        public EnrollCustomerResponse(int EnrollCustomerResult) {
            this.EnrollCustomerResult = EnrollCustomerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollCustomerWithLanguageFlag", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollCustomerWithLanguageFlagRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=1)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=2)]
        public string middleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=3)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=4)]
        public string address1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=5)]
        public string address2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=6)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=7)]
        public string state;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=8)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> rateId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=10)]
        public int rateMonths;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=11)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=12)]
        public System.DateTime birthDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=13)]
        public string federalTaxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=14)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=15)]
        public string phoneExt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=16)]
        public string fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=17)]
        public bool isNewResidence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=18)]
        public System.DateTime serviceStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=19)]
        public string heardAboutUs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=20)]
        public string enrollmentGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=21)]
        public int divisionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=22)]
        public int creditScore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=23)]
        public string tpVerificationNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=24)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> languageId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=25)]
        public string brokerSalesCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=26)]
        public string productCode;
        
        public EnrollCustomerWithLanguageFlagRequest() {
        }
        
        public EnrollCustomerWithLanguageFlagRequest(
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    int rateMonths, 
                    string email, 
                    System.DateTime birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    int creditScore, 
                    string tpVerificationNum, 
                    System.Nullable<int> languageId, 
                    string brokerSalesCode, 
                    string productCode) {
            this.customerType = customerType;
            this.firstName = firstName;
            this.middleName = middleName;
            this.lastName = lastName;
            this.address1 = address1;
            this.address2 = address2;
            this.city = city;
            this.state = state;
            this.zip = zip;
            this.rateId = rateId;
            this.rateMonths = rateMonths;
            this.email = email;
            this.birthDate = birthDate;
            this.federalTaxId = federalTaxId;
            this.phone = phone;
            this.phoneExt = phoneExt;
            this.fax = fax;
            this.isNewResidence = isNewResidence;
            this.serviceStartDate = serviceStartDate;
            this.heardAboutUs = heardAboutUs;
            this.enrollmentGuid = enrollmentGuid;
            this.divisionId = divisionId;
            this.creditScore = creditScore;
            this.tpVerificationNum = tpVerificationNum;
            this.languageId = languageId;
            this.brokerSalesCode = brokerSalesCode;
            this.productCode = productCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollCustomerWithLanguageFlagResponse", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollCustomerWithLanguageFlagResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public int EnrollCustomerWithLanguageFlagResult;
        
        public EnrollCustomerWithLanguageFlagResponse() {
        }
        
        public EnrollCustomerWithLanguageFlagResponse(int EnrollCustomerWithLanguageFlagResult) {
            this.EnrollCustomerWithLanguageFlagResult = EnrollCustomerWithLanguageFlagResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.ista-billing.com/clients/texpo/")]
    public enum CommodityType {
        
        /// <remarks/>
        ELECTRIC,
        
        /// <remarks/>
        GAS,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollNonTexasPremise", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollNonTexasPremiseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public string ldcAccountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=1)]
        public string ldcDuns;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=2)]
        public string addr1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=3)]
        public string addr2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=4)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=5)]
        public string state;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=6)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=7)]
        public string zip4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=8)]
        public string premiseType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=9)]
        public bool haslifeSupport;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> serviceCycle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=11)]
        public bool metered;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=12)]
        public string locationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=13)]
        public string enrollmentGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=14)]
        public string CspDuns;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=15)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<CommodityType> commodity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=16)]
        public string meterNumber;
        
        public EnrollNonTexasPremiseRequest() {
        }
        
        public EnrollNonTexasPremiseRequest(
                    string ldcAccountNumber, 
                    string ldcDuns, 
                    string addr1, 
                    string addr2, 
                    string city, 
                    string state, 
                    string zip, 
                    string zip4, 
                    string premiseType, 
                    bool haslifeSupport, 
                    System.Nullable<int> serviceCycle, 
                    bool metered, 
                    string locationCode, 
                    string enrollmentGuid, 
                    string CspDuns, 
                    System.Nullable<CommodityType> commodity, 
                    string meterNumber) {
            this.ldcAccountNumber = ldcAccountNumber;
            this.ldcDuns = ldcDuns;
            this.addr1 = addr1;
            this.addr2 = addr2;
            this.city = city;
            this.state = state;
            this.zip = zip;
            this.zip4 = zip4;
            this.premiseType = premiseType;
            this.haslifeSupport = haslifeSupport;
            this.serviceCycle = serviceCycle;
            this.metered = metered;
            this.locationCode = locationCode;
            this.enrollmentGuid = enrollmentGuid;
            this.CspDuns = CspDuns;
            this.commodity = commodity;
            this.meterNumber = meterNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollNonTexasPremiseResponse", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollNonTexasPremiseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public int EnrollNonTexasPremiseResult;
        
        public EnrollNonTexasPremiseResponse() {
        }
        
        public EnrollNonTexasPremiseResponse(int EnrollNonTexasPremiseResult) {
            this.EnrollNonTexasPremiseResult = EnrollNonTexasPremiseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollNonTexasCustomer", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollNonTexasCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public int enrollPremiseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=1)]
        public Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=2)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=3)]
        public string middleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=4)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=5)]
        public string address1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=6)]
        public string address2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=7)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=8)]
        public string state;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=9)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> rateId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> rateMonths;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=12)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=13)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> birthDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=14)]
        public string federalTaxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=15)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=16)]
        public string phoneExt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=17)]
        public string fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=18)]
        public bool isNewResidence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=19)]
        public System.DateTime serviceStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=20)]
        public string heardAboutUs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=21)]
        public string enrollmentGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=22)]
        public int divisionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=23)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> creditScore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=24)]
        public string tpVerificationNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=25)]
        public int billingTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=26)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=27)]
        public string contactFirstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=28)]
        public string contactLastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=29)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> languageId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=30)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> customerContractStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=31)]
        public string brokerSalesCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=32)]
        public string productCode;
        
        public EnrollNonTexasCustomerRequest() {
        }
        
        public EnrollNonTexasCustomerRequest(
                    int enrollPremiseId, 
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    System.Nullable<int> rateMonths, 
                    string email, 
                    System.Nullable<System.DateTime> birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    System.Nullable<int> creditScore, 
                    string tpVerificationNum, 
                    int billingTypeId, 
                    string companyName, 
                    string contactFirstName, 
                    string contactLastName, 
                    System.Nullable<int> languageId, 
                    System.Nullable<System.DateTime> customerContractStartDate, 
                    string brokerSalesCode, 
                    string productCode) {
            this.enrollPremiseId = enrollPremiseId;
            this.customerType = customerType;
            this.firstName = firstName;
            this.middleName = middleName;
            this.lastName = lastName;
            this.address1 = address1;
            this.address2 = address2;
            this.city = city;
            this.state = state;
            this.zip = zip;
            this.rateId = rateId;
            this.rateMonths = rateMonths;
            this.email = email;
            this.birthDate = birthDate;
            this.federalTaxId = federalTaxId;
            this.phone = phone;
            this.phoneExt = phoneExt;
            this.fax = fax;
            this.isNewResidence = isNewResidence;
            this.serviceStartDate = serviceStartDate;
            this.heardAboutUs = heardAboutUs;
            this.enrollmentGuid = enrollmentGuid;
            this.divisionId = divisionId;
            this.creditScore = creditScore;
            this.tpVerificationNum = tpVerificationNum;
            this.billingTypeId = billingTypeId;
            this.companyName = companyName;
            this.contactFirstName = contactFirstName;
            this.contactLastName = contactLastName;
            this.languageId = languageId;
            this.customerContractStartDate = customerContractStartDate;
            this.brokerSalesCode = brokerSalesCode;
            this.productCode = productCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnrollNonTexasCustomerResponse", WrapperNamespace="https://services.ista-billing.com/clients/texpo/", IsWrapped=true)]
    public partial class EnrollNonTexasCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.ista-billing.com/clients/texpo/", Order=0)]
        public int EnrollNonTexasCustomerResult;
        
        public EnrollNonTexasCustomerResponse() {
        }
        
        public EnrollNonTexasCustomerResponse(int EnrollNonTexasCustomerResult) {
            this.EnrollNonTexasCustomerResult = EnrollNonTexasCustomerResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EnrollmentSoapChannel : Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnrollmentSoapClient : System.ServiceModel.ClientBase<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap>, Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap {
        
        public EnrollmentSoapClient() {
        }
        
        public EnrollmentSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnrollmentSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollmentSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollmentSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AggregatorFee(int aggregatorId, int customerId, int premiseId, decimal commission, int termLength) {
            return base.Channel.AggregatorFee(aggregatorId, customerId, premiseId, commission, termLength);
        }
        
        public System.Threading.Tasks.Task<int> AggregatorFeeAsync(int aggregatorId, int customerId, int premiseId, decimal commission, int termLength) {
            return base.Channel.AggregatorFeeAsync(aggregatorId, customerId, premiseId, commission, termLength);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerResponse Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollCustomer(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest request) {
            return base.Channel.EnrollCustomer(request);
        }
        
        public int EnrollCustomer(
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    int rateMonths, 
                    string email, 
                    System.DateTime birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    int creditScore, 
                    System.Nullable<int> languageId, 
                    string tpVerificationNum, 
                    string brokerSalesCode, 
                    string productCode) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest();
            inValue.customerType = customerType;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.rateId = rateId;
            inValue.rateMonths = rateMonths;
            inValue.email = email;
            inValue.birthDate = birthDate;
            inValue.federalTaxId = federalTaxId;
            inValue.phone = phone;
            inValue.phoneExt = phoneExt;
            inValue.fax = fax;
            inValue.isNewResidence = isNewResidence;
            inValue.serviceStartDate = serviceStartDate;
            inValue.heardAboutUs = heardAboutUs;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.divisionId = divisionId;
            inValue.creditScore = creditScore;
            inValue.languageId = languageId;
            inValue.tpVerificationNum = tpVerificationNum;
            inValue.brokerSalesCode = brokerSalesCode;
            inValue.productCode = productCode;
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerResponse retVal = ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollCustomer(inValue);
            return retVal.EnrollCustomerResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerResponse> Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollCustomerAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest request) {
            return base.Channel.EnrollCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerResponse> EnrollCustomerAsync(
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    int rateMonths, 
                    string email, 
                    System.DateTime birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    int creditScore, 
                    System.Nullable<int> languageId, 
                    string tpVerificationNum, 
                    string brokerSalesCode, 
                    string productCode) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerRequest();
            inValue.customerType = customerType;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.rateId = rateId;
            inValue.rateMonths = rateMonths;
            inValue.email = email;
            inValue.birthDate = birthDate;
            inValue.federalTaxId = federalTaxId;
            inValue.phone = phone;
            inValue.phoneExt = phoneExt;
            inValue.fax = fax;
            inValue.isNewResidence = isNewResidence;
            inValue.serviceStartDate = serviceStartDate;
            inValue.heardAboutUs = heardAboutUs;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.divisionId = divisionId;
            inValue.creditScore = creditScore;
            inValue.languageId = languageId;
            inValue.tpVerificationNum = tpVerificationNum;
            inValue.brokerSalesCode = brokerSalesCode;
            inValue.productCode = productCode;
            return ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollCustomerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagResponse Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollCustomerWithLanguageFlag(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest request) {
            return base.Channel.EnrollCustomerWithLanguageFlag(request);
        }
        
        public int EnrollCustomerWithLanguageFlag(
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    int rateMonths, 
                    string email, 
                    System.DateTime birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    int creditScore, 
                    string tpVerificationNum, 
                    System.Nullable<int> languageId, 
                    string brokerSalesCode, 
                    string productCode) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest();
            inValue.customerType = customerType;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.rateId = rateId;
            inValue.rateMonths = rateMonths;
            inValue.email = email;
            inValue.birthDate = birthDate;
            inValue.federalTaxId = federalTaxId;
            inValue.phone = phone;
            inValue.phoneExt = phoneExt;
            inValue.fax = fax;
            inValue.isNewResidence = isNewResidence;
            inValue.serviceStartDate = serviceStartDate;
            inValue.heardAboutUs = heardAboutUs;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.divisionId = divisionId;
            inValue.creditScore = creditScore;
            inValue.tpVerificationNum = tpVerificationNum;
            inValue.languageId = languageId;
            inValue.brokerSalesCode = brokerSalesCode;
            inValue.productCode = productCode;
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagResponse retVal = ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollCustomerWithLanguageFlag(inValue);
            return retVal.EnrollCustomerWithLanguageFlagResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagResponse> Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollCustomerWithLanguageFlagAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest request) {
            return base.Channel.EnrollCustomerWithLanguageFlagAsync(request);
        }
        
        public System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagResponse> EnrollCustomerWithLanguageFlagAsync(
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    int rateMonths, 
                    string email, 
                    System.DateTime birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    int creditScore, 
                    string tpVerificationNum, 
                    System.Nullable<int> languageId, 
                    string brokerSalesCode, 
                    string productCode) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollCustomerWithLanguageFlagRequest();
            inValue.customerType = customerType;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.rateId = rateId;
            inValue.rateMonths = rateMonths;
            inValue.email = email;
            inValue.birthDate = birthDate;
            inValue.federalTaxId = federalTaxId;
            inValue.phone = phone;
            inValue.phoneExt = phoneExt;
            inValue.fax = fax;
            inValue.isNewResidence = isNewResidence;
            inValue.serviceStartDate = serviceStartDate;
            inValue.heardAboutUs = heardAboutUs;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.divisionId = divisionId;
            inValue.creditScore = creditScore;
            inValue.tpVerificationNum = tpVerificationNum;
            inValue.languageId = languageId;
            inValue.brokerSalesCode = brokerSalesCode;
            inValue.productCode = productCode;
            return ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollCustomerWithLanguageFlagAsync(inValue);
        }
        
        public int EnrollCustomerPaymentInfo(
                    int enrollCustomerId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string creditCardType, 
                    string creditCardNumber, 
                    string creditCardSIC, 
                    string creditCardExpMonth, 
                    string creditCardExpYear, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingCity, 
                    string billingState, 
                    string billingZip, 
                    decimal depositAmount, 
                    bool isRecurringPayment) {
            return base.Channel.EnrollCustomerPaymentInfo(enrollCustomerId, firstName, middleName, lastName, creditCardType, creditCardNumber, creditCardSIC, creditCardExpMonth, creditCardExpYear, billingAddress1, billingAddress2, billingCity, billingState, billingZip, depositAmount, isRecurringPayment);
        }
        
        public System.Threading.Tasks.Task<int> EnrollCustomerPaymentInfoAsync(
                    int enrollCustomerId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string creditCardType, 
                    string creditCardNumber, 
                    string creditCardSIC, 
                    string creditCardExpMonth, 
                    string creditCardExpYear, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingCity, 
                    string billingState, 
                    string billingZip, 
                    decimal depositAmount, 
                    bool isRecurringPayment) {
            return base.Channel.EnrollCustomerPaymentInfoAsync(enrollCustomerId, firstName, middleName, lastName, creditCardType, creditCardNumber, creditCardSIC, creditCardExpMonth, creditCardExpYear, billingAddress1, billingAddress2, billingCity, billingState, billingZip, depositAmount, isRecurringPayment);
        }
        
        public System.Data.DataSet EnrollPremise(int enrollPremiseId, bool hasLifeSupport) {
            return base.Channel.EnrollPremise(enrollPremiseId, hasLifeSupport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EnrollPremiseAsync(int enrollPremiseId, bool hasLifeSupport) {
            return base.Channel.EnrollPremiseAsync(enrollPremiseId, hasLifeSupport);
        }
        
        public System.Data.DataSet ImportCustomer(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId) {
            return base.Channel.ImportCustomer(enrollCustomerId, enrollPremiseId, deliveryTypeId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ImportCustomerAsync(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId) {
            return base.Channel.ImportCustomerAsync(enrollCustomerId, enrollPremiseId, deliveryTypeId);
        }
        
        public System.Data.DataSet ImportNonTexasCustomer(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId) {
            return base.Channel.ImportNonTexasCustomer(enrollCustomerId, enrollPremiseId, deliveryTypeId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ImportNonTexasCustomerAsync(int enrollCustomerId, int enrollPremiseId, int deliveryTypeId) {
            return base.Channel.ImportNonTexasCustomerAsync(enrollCustomerId, enrollPremiseId, deliveryTypeId);
        }
        
        public bool ReferAFriend(int customerId, int enrollCustomerId) {
            return base.Channel.ReferAFriend(customerId, enrollCustomerId);
        }
        
        public System.Threading.Tasks.Task<bool> ReferAFriendAsync(int customerId, int enrollCustomerId) {
            return base.Channel.ReferAFriendAsync(customerId, enrollCustomerId);
        }
        
        public System.Data.DataSet ValidateEsiId(string esiId) {
            return base.Channel.ValidateEsiId(esiId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ValidateEsiIdAsync(string esiId) {
            return base.Channel.ValidateEsiIdAsync(esiId);
        }
        
        public bool ValidateSecurity() {
            return base.Channel.ValidateSecurity();
        }
        
        public System.Threading.Tasks.Task<bool> ValidateSecurityAsync() {
            return base.Channel.ValidateSecurityAsync();
        }
        
        public System.Data.DataSet ValidateServiceAddress(string address1, string address2, string city, string state, string zip) {
            return base.Channel.ValidateServiceAddress(address1, address2, city, state, zip);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ValidateServiceAddressAsync(string address1, string address2, string city, string state, string zip) {
            return base.Channel.ValidateServiceAddressAsync(address1, address2, city, state, zip);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseResponse Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollNonTexasPremise(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest request) {
            return base.Channel.EnrollNonTexasPremise(request);
        }
        
        public int EnrollNonTexasPremise(
                    string ldcAccountNumber, 
                    string ldcDuns, 
                    string addr1, 
                    string addr2, 
                    string city, 
                    string state, 
                    string zip, 
                    string zip4, 
                    string premiseType, 
                    bool haslifeSupport, 
                    System.Nullable<int> serviceCycle, 
                    bool metered, 
                    string locationCode, 
                    string enrollmentGuid, 
                    string CspDuns, 
                    System.Nullable<CommodityType> commodity, 
                    string meterNumber) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest();
            inValue.ldcAccountNumber = ldcAccountNumber;
            inValue.ldcDuns = ldcDuns;
            inValue.addr1 = addr1;
            inValue.addr2 = addr2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.zip4 = zip4;
            inValue.premiseType = premiseType;
            inValue.haslifeSupport = haslifeSupport;
            inValue.serviceCycle = serviceCycle;
            inValue.metered = metered;
            inValue.locationCode = locationCode;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.CspDuns = CspDuns;
            inValue.commodity = commodity;
            inValue.meterNumber = meterNumber;
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseResponse retVal = ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollNonTexasPremise(inValue);
            return retVal.EnrollNonTexasPremiseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseResponse> Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollNonTexasPremiseAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest request) {
            return base.Channel.EnrollNonTexasPremiseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseResponse> EnrollNonTexasPremiseAsync(
                    string ldcAccountNumber, 
                    string ldcDuns, 
                    string addr1, 
                    string addr2, 
                    string city, 
                    string state, 
                    string zip, 
                    string zip4, 
                    string premiseType, 
                    bool haslifeSupport, 
                    System.Nullable<int> serviceCycle, 
                    bool metered, 
                    string locationCode, 
                    string enrollmentGuid, 
                    string CspDuns, 
                    System.Nullable<CommodityType> commodity, 
                    string meterNumber) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasPremiseRequest();
            inValue.ldcAccountNumber = ldcAccountNumber;
            inValue.ldcDuns = ldcDuns;
            inValue.addr1 = addr1;
            inValue.addr2 = addr2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.zip4 = zip4;
            inValue.premiseType = premiseType;
            inValue.haslifeSupport = haslifeSupport;
            inValue.serviceCycle = serviceCycle;
            inValue.metered = metered;
            inValue.locationCode = locationCode;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.CspDuns = CspDuns;
            inValue.commodity = commodity;
            inValue.meterNumber = meterNumber;
            return ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollNonTexasPremiseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerResponse Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollNonTexasCustomer(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest request) {
            return base.Channel.EnrollNonTexasCustomer(request);
        }
        
        public int EnrollNonTexasCustomer(
                    int enrollPremiseId, 
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    System.Nullable<int> rateMonths, 
                    string email, 
                    System.Nullable<System.DateTime> birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    System.Nullable<int> creditScore, 
                    string tpVerificationNum, 
                    int billingTypeId, 
                    string companyName, 
                    string contactFirstName, 
                    string contactLastName, 
                    System.Nullable<int> languageId, 
                    System.Nullable<System.DateTime> customerContractStartDate, 
                    string brokerSalesCode, 
                    string productCode) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest();
            inValue.enrollPremiseId = enrollPremiseId;
            inValue.customerType = customerType;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.rateId = rateId;
            inValue.rateMonths = rateMonths;
            inValue.email = email;
            inValue.birthDate = birthDate;
            inValue.federalTaxId = federalTaxId;
            inValue.phone = phone;
            inValue.phoneExt = phoneExt;
            inValue.fax = fax;
            inValue.isNewResidence = isNewResidence;
            inValue.serviceStartDate = serviceStartDate;
            inValue.heardAboutUs = heardAboutUs;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.divisionId = divisionId;
            inValue.creditScore = creditScore;
            inValue.tpVerificationNum = tpVerificationNum;
            inValue.billingTypeId = billingTypeId;
            inValue.companyName = companyName;
            inValue.contactFirstName = contactFirstName;
            inValue.contactLastName = contactLastName;
            inValue.languageId = languageId;
            inValue.customerContractStartDate = customerContractStartDate;
            inValue.brokerSalesCode = brokerSalesCode;
            inValue.productCode = productCode;
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerResponse retVal = ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollNonTexasCustomer(inValue);
            return retVal.EnrollNonTexasCustomerResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerResponse> Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap.EnrollNonTexasCustomerAsync(Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest request) {
            return base.Channel.EnrollNonTexasCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerResponse> EnrollNonTexasCustomerAsync(
                    int enrollPremiseId, 
                    Aurea.Maintenance.Debugger.Texpo.TexpoWS.CustomerTypeOptions customerType, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    System.Nullable<int> rateId, 
                    System.Nullable<int> rateMonths, 
                    string email, 
                    System.Nullable<System.DateTime> birthDate, 
                    string federalTaxId, 
                    string phone, 
                    string phoneExt, 
                    string fax, 
                    bool isNewResidence, 
                    System.DateTime serviceStartDate, 
                    string heardAboutUs, 
                    string enrollmentGuid, 
                    int divisionId, 
                    System.Nullable<int> creditScore, 
                    string tpVerificationNum, 
                    int billingTypeId, 
                    string companyName, 
                    string contactFirstName, 
                    string contactLastName, 
                    System.Nullable<int> languageId, 
                    System.Nullable<System.DateTime> customerContractStartDate, 
                    string brokerSalesCode, 
                    string productCode) {
            Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest inValue = new Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollNonTexasCustomerRequest();
            inValue.enrollPremiseId = enrollPremiseId;
            inValue.customerType = customerType;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip = zip;
            inValue.rateId = rateId;
            inValue.rateMonths = rateMonths;
            inValue.email = email;
            inValue.birthDate = birthDate;
            inValue.federalTaxId = federalTaxId;
            inValue.phone = phone;
            inValue.phoneExt = phoneExt;
            inValue.fax = fax;
            inValue.isNewResidence = isNewResidence;
            inValue.serviceStartDate = serviceStartDate;
            inValue.heardAboutUs = heardAboutUs;
            inValue.enrollmentGuid = enrollmentGuid;
            inValue.divisionId = divisionId;
            inValue.creditScore = creditScore;
            inValue.tpVerificationNum = tpVerificationNum;
            inValue.billingTypeId = billingTypeId;
            inValue.companyName = companyName;
            inValue.contactFirstName = contactFirstName;
            inValue.contactLastName = contactLastName;
            inValue.languageId = languageId;
            inValue.customerContractStartDate = customerContractStartDate;
            inValue.brokerSalesCode = brokerSalesCode;
            inValue.productCode = productCode;
            return ((Aurea.Maintenance.Debugger.Texpo.TexpoWS.EnrollmentSoap)(this)).EnrollNonTexasCustomerAsync(inValue);
        }
    }
}
